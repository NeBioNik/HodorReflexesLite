name: ESOUI Release

on:
  #schedule:
    # every saturday at 05:07am
  #  - cron: "7 5 * * 0"
  push:
    branches:
      - release # to be changed to main with schedule

jobs:
  release:
    name: "release"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Check icon integrity
        run: |
          python3 .github/scripts/integrity.py

      - name: Get current year, month and day
        run: |
          echo "BUILD_DATE_YEAR=$(date -u +'%Y')" >> $GITHUB_ENV
          echo "BUILD_DATE_MONTH=$(date -u +'%m')" >> $GITHUB_ENV
          echo "BUILD_DATE_DAY=$(date -u +'%d')" >> $GITHUB_ENV
          echo "BUILD_DATE_NUMBER=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "BUILD_DATE_WITH_DOT=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
          echo "BUILD_DATE_WITH_HYPHEN=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Get addon variables
        run: |
          addon_name="HodorReflexes"
          
          echo "ADDON_NAME=$addon_name" >> $GITHUB_ENV
          echo "ZIP_FULL_NAME=$addon_name-${{ env.BUILD_DATE_WITH_HYPHEN }}.zip" >> $GITHUB_ENV
          echo "ZIP_LITE_NAME=$addon_name-${{ env.BUILD_DATE_WITH_HYPHEN }}-lite.zip" >> $GITHUB_ENV

      - name: Replace placeholders with current date
        run: |
          sed -i "s/version = \"dev\"/version = \"${{ env.BUILD_DATE_WITH_DOT }}\"/g" ${{ env.ADDON_NAME }}.lua
          sed -i "s/## Version: dev/## Version: ${{ env.BUILD_DATE_WITH_DOT }}/g" ${{ env.ADDON_NAME }}.addon
          sed -i "s/## AddOnVersion: 99999999/## AddOnVersion: ${{ env.BUILD_DATE_NUMBER }}/g" ${{ env.ADDON_NAME }}.addon

      - name: Create ZIP archive
        run: |
          REPO_FOLDER=$(pwd)
          TMP_FOLDER="/tmp/${{ env.ADDON_NAME }}"
          
          # Make folder and copy content
          mkdir -p $TMP_FOLDER
          
          rsync -a --quiet \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.gitignore' \
            --exclude='TODO.md' \
            --exclude='config.ld' \
            "$REPO_FOLDER/" "$TMP_FOLDER/"
          
          # Make full version zip
          (cd /tmp && zip -r --quiet "$REPO_FOLDER/${{ env.ZIP_FULL_NAME }}" "${{ env.ADDON_NAME }}")
          
          # Make lite version. Remove custom users icons
          rm -rf $TMP_FOLDER/users
          sed -i '/^users\//d' $TMP_FOLDER/${{ env.ADDON_NAME }}.addon
          sed -i "s/liteVersion = false/liteVersion = true/g" $TMP_FOLDER/${{ env.ADDON_NAME }}.lua
          
          # Make lite version zip
          (cd /tmp && zip -r --quiet "$REPO_FOLDER/${{ env.ZIP_LITE_NAME }}" "${{ env.ADDON_NAME }}")

      - name: Extract latest changelog entry
        run: |
          awk '/^## / { if (!found) { found=1; print; next } else { exit } } found' CHANGELOG.md > latest_changes.md
          cat latest_changes.md

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: "${{ env.BUILD_DATE_WITH_DOT }}"
          commit: ${{ github.ref }}
          tag: "${{ env.BUILD_DATE_WITH_DOT }}"
          artifacts: "${{ env.ZIP_FULL_NAME }}, ${{ env.ZIP_LITE_NAME }}"
          artifactContentType: application/zip
          bodyFile: latest_changes.md
          allowUpdates: true
          makeLatest: true

      - name: Send to ESOUI
        env:
          ESOUI_API_KEY: ${{ secrets.ESOUI_API_KEY }}
          ADDON_ID: 2311
        run: |
          curl -X POST \
            -H "x-api-token: $ESOUI_API_KEY" \
            -F "id=${ADDON_ID}" \
            -F "version=${{ env.BUILD_DATE_WITH_DOT }}" \
            -F "updatefile=@${{ env.ZIP_FULL_NAME }}" \
            -F "changelog=$(cat CHANGELOG.md)" \
            https://api.esoui.com/addons/update
